{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "datafactory-alan"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/GetMetaDatacsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"fileSystem": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "Email",
						"type": "String"
					},
					{
						"name": "Phone",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LabActiv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileAddress": {
						"type": "string"
					},
					"Filename": {
						"type": "string",
						"defaultValue": "EmployeeData.csv"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FileAddress",
							"type": "Expression"
						},
						"fileSystem": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EmployeeID",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Joining Date",
						"type": "String"
					},
					{
						"name": "Department",
						"type": "String"
					},
					{
						"name": "Salary",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LabActivSqlTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SchemaName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LookUpTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FileName",
						"type": "varchar"
					},
					{
						"name": "Adls_Location",
						"type": "varchar"
					},
					{
						"name": "LandingSchema",
						"type": "varchar"
					},
					{
						"name": "LandingTable",
						"type": "varchar"
					},
					{
						"name": "Load_Freq",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "Cntrl",
					"table": "Metadata"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LookupTables')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Filename",
						"type": "varchar"
					},
					{
						"name": "Adls_loc",
						"type": "varchar"
					},
					{
						"name": "LandingSchema",
						"type": "varchar"
					},
					{
						"name": "LandingTable",
						"type": "varchar"
					},
					{
						"name": "Load_Freq",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "Cntrl",
					"table": "MetadataLab"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Order')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "orders.csv",
						"fileSystem": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "OrderID",
						"type": "String"
					},
					{
						"name": "OrderDate",
						"type": "String"
					},
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "ProductID",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "TotalAmount",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Order2024')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Orders_2024.csv",
						"folderPath": "Dataflow",
						"fileSystem": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "OrderID",
						"type": "String"
					},
					{
						"name": "OrderDate",
						"type": "String"
					},
					{
						"name": "ProductID",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "UnitPrice",
						"type": "String"
					},
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "SalesExecID",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Order2025')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Orders_2025.csv",
						"folderPath": "Dataflow",
						"fileSystem": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "OrderID",
						"type": "String"
					},
					{
						"name": "OrderDate",
						"type": "String"
					},
					{
						"name": "ProductID",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "UnitPrice",
						"type": "String"
					},
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "SalesExecID",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OrderFinal')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "FinalOrdersFactTab.csv",
						"folderPath": "Dataflow",
						"fileSystem": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "OrderID",
						"type": "String"
					},
					{
						"name": "OrderDate",
						"type": "String"
					},
					{
						"name": "ProductID",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "UnitPrice",
						"type": "String"
					},
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "SalesExecID",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Orders2023')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Orders_2023.csv",
						"folderPath": "Dataflow",
						"fileSystem": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "OrderID",
						"type": "String"
					},
					{
						"name": "OrderDate",
						"type": "String"
					},
					{
						"name": "ProductID",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "UnitPrice",
						"type": "String"
					},
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "SalesExecID",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ParameterizedCsvData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"fileSystem": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "Email",
						"type": "String"
					},
					{
						"name": "Phone",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ParameterizedSqlTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SchemaName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ParamterizeCsvDataLab')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Filename": {
						"type": "string"
					},
					"Directoryname": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().Filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Directoryname",
							"type": "Expression"
						},
						"fileSystem": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EmployeeID",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Joining Date",
						"type": "String"
					},
					{
						"name": "Department",
						"type": "String"
					},
					{
						"name": "Salary",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Order.parquet",
						"fileSystem": "data"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "OrderID",
						"type": "UTF8"
					},
					{
						"name": "OrderDate",
						"type": "DATE"
					},
					{
						"name": "Quantity",
						"type": "INT32"
					},
					{
						"name": "UnitPrice",
						"type": "FLOAT"
					},
					{
						"name": "SalesExecID",
						"type": "UTF8"
					},
					{
						"name": "ProductID",
						"type": "UTF8"
					},
					{
						"name": "ProductName",
						"type": "UTF8"
					},
					{
						"name": "Product_Category",
						"type": "UTF8"
					},
					{
						"name": "CustomerID",
						"type": "UTF8"
					},
					{
						"name": "CustomerName",
						"type": "UTF8"
					},
					{
						"name": "Phone",
						"type": "UTF8"
					},
					{
						"name": "City",
						"type": "UTF8"
					},
					{
						"name": "Country",
						"type": "UTF8"
					},
					{
						"name": "Age",
						"type": "INT32"
					},
					{
						"name": "CustomerCat",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Products')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "products.csv",
						"fileSystem": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ProductID",
						"type": "String"
					},
					{
						"name": "ProductName",
						"type": "String"
					},
					{
						"name": "Category",
						"type": "String"
					},
					{
						"name": "Price",
						"type": "String"
					},
					{
						"name": "StockQuantity",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProductsData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "products 2.csv",
						"folderPath": "Dataflow",
						"fileSystem": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ProductID",
						"type": "String"
					},
					{
						"name": "ProductName",
						"type": "String"
					},
					{
						"name": "Product Category",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesExecData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "SalesExecutives.csv",
						"folderPath": "Dataflow",
						"fileSystem": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SalesExecID",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Age",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Combo_ABC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PiplA",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "WaitA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"WaitA": 10
							}
						}
					},
					{
						"name": "PiplB",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "WaitB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"WaitA": 10,
								"WaitB": 5
							}
						}
					},
					{
						"name": "PiplC",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PiplA",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "PiplB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "WaitC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"WaitA": 10,
								"WaitB": 5,
								"WaitC": 10
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FullLoad')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select * from dbo.Leads_og where CreatedDate>''',variables('Date'), '''')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Truncate Table Landing.Suhail_Leads",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable6",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable7",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from Cntrl.Leads_Watermark",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable7",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Date",
							"value": {
								"value": "@formatDateTime(activity('Lookup1').output.value[0].Watermark_Datetime,'yyyy-MM-dd HH:mm:ss.fff')\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable7",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable8",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Script1",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Copy data2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "Update Cntrl.Leads_Watermark\nset Watermark_Datetime = (Select MAX(CreatedDate) from Suhail.Leads)",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Date": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetMetaData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "GetMetaData",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"itemName",
								"itemType",
								"lastModified",
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Get Metadata2",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "GetMetaDatacsv",
											"type": "DatasetReference",
											"parameters": {
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"itemName",
											"itemType",
											"lastModified",
											"size"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "DateToday",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get Metadata2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "TodayDate",
										"value": {
											"value": "@substring(utcNow(),0,10 )",
											"type": "Expression"
										}
									}
								},
								{
									"name": "FileDate",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get Metadata2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "FileDate",
										"value": {
											"value": "@substring(activity('Get Metadata2').output.lastModified,0,10)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "FileDate",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "DateToday",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(variables('FileDate'), variables('TodayDate'))",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "FileNotUpdated",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 1
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "AdlsToSql1",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "OrderID",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "OrderID",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "OrderDate",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "OrderDate",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "CustomerID",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "CustomerID",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "ProductID",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "ProductID",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "Quantity",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "Quantity",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															},
															{
																"source": {
																	"name": "TotalAmount",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "TotalAmount",
																	"type": "String",
																	"physicalType": "nvarchar"
																}
															}
														],
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "ParameterizedCsvData",
														"type": "DatasetReference",
														"parameters": {
															"FileName": {
																"value": "@activity('Get Metadata2').output.itemName",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DelimitedText1",
														"type": "DatasetReference",
														"parameters": {
															"FileName": {
																"value": "@concat(variables('FileDate'),'_',activity('Get Metadata2').output.itemName)",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"TodayDate": {
						"type": "String"
					},
					"FileDate": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-04-25T12:55:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/GetMetaDatacsv')]",
				"[concat(variables('factoryId'), '/datasets/ParameterizedCsvData')]"
			]
		}
	]
}