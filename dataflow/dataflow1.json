{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Order",
						"type": "DatasetReference"
					},
					"name": "OrdersData"
				},
				{
					"dataset": {
						"referenceName": "Products",
						"type": "DatasetReference"
					},
					"name": "ProductsData"
				},
				{
					"dataset": {
						"referenceName": "Customers",
						"type": "DatasetReference"
					},
					"name": "CustomersData"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DataflowOp",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "FilterAprilData"
				},
				{
					"name": "TypeCast"
				},
				{
					"name": "select1"
				},
				{
					"name": "cast1"
				},
				{
					"name": "PhoneStatus"
				}
			],
			"scriptLines": [
				"source(output(",
				"          OrderID as string,",
				"          OrderDate as string,",
				"          CustomerID as string,",
				"          ProductID as string,",
				"          Quantity as string,",
				"          TotalAmount as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> OrdersData",
				"source(output(",
				"          ProductID as string,",
				"          ProductName as string,",
				"          Category as string,",
				"          Price as string,",
				"          StockQuantity as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> ProductsData",
				"source(output(",
				"          CustomerID as string,",
				"          FirstName as string,",
				"          LastName as string,",
				"          Email as string,",
				"          Phone as string,",
				"          City as string,",
				"          Country as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> CustomersData",
				"TypeCast filter(month(OrderDate)==4) ~> FilterAprilData",
				"OrdersData cast(output(",
				"          OrderDate as date 'yyyy-MM-dd',",
				"          Quantity as integer,",
				"          TotalAmount as double",
				"     ),",
				"     errors: true) ~> TypeCast",
				"cast1 select(mapColumn(",
				"          ProductID,",
				"          ProductName,",
				"          ProdCat = Category,",
				"          Price,",
				"          StockQuantity",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"ProductsData cast(output(",
				"          Price as double,",
				"          StockQuantity as integer",
				"     ),",
				"     errors: true) ~> cast1",
				"CustomersData derive(PhoneValid = iif(length(Phone)==10,'Valid','NotValid')) ~> PhoneStatus",
				"FilterAprilData sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}